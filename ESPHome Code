esphome:
  name: air-quality-sensor
  friendly_name: Air Quality Sensor
  
  

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino
  variant: ESP32C3
    

# Enable logging
logger:

# Enable Home Assistant API
api:
  # encryption:
  #   key: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: YOURSSID
  password: YOURPASSWORD
  # fast_connect: true
  power_save_mode: none
  output_power: 20dB
  reboot_timeout: 0s

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Livingroom-Air-Quality-Sensor"
    password: ""

captive_portal:

uart:
  #UART_1 is for Presensce Sensor
  - id: uart_1
    tx_pin: GPIO21 #Grey
    rx_pin: GPIO20 #Blue
    baud_rate: 256000
    parity: NONE
    stop_bits: 1
  #UART_2 is for PM2.5 Sensoe Reading
  - id: uart_2
    rx_pin: GPIO7 #RED
    baud_rate: 9600


i2c:
  #I2C for Enviromental Sensor
  - id: bus_a
    sda: GPIO8 #8  SDA YELLOW
    scl: GPIO9 #9  SCL GREEN
    scan: true

ld2410:
  id: livingroom_ld2410
  uart_id: uart_1

binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
    has_moving_target:
      name: Moving Target
    has_still_target:
      name: Still Target
    out_pin_presence_status:
      name: out pin presence status
  - platform: gpio
    name: fan
    id: fan
    pin:
      #Fan Status Reading
      number: 10 #WHITE
      inverted: True

sensor:
  - platform: pm1006
    uart_id: uart_2
    pm_2_5:
      name: "Air Pollutants"
      id: air_pollutants
      accuracy_decimals: 1
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10

  - platform: ld2410
    moving_distance:
      name: "Moving Distance"
    still_distance:
      name: "Still Distance"
    moving_energy:
      name: "Moving Energy"
    still_energy:
      name: "Still Energy"
    detection_distance:
      name: "Detection Distance"
  
  - platform: ens160_i2c
    i2c_id: bus_a
    eco2:
      name: "ENS160 eCO2"
      id: ens160_eco2
    tvoc:
      name: "ENS160 VOC"
      id: ens160_voc
    aqi:
      id: ens160_air_quality_index
      name: "ENS160 Air Quality Index"
    update_interval: 60s
    address: 0x53
    compensation:
      temperature: temperature
      humidity: humidity

  - platform: aht10
    variant: AHT20
    temperature:
      name: "Temperature"
      id: temperature
      filters:
        - offset: -16.5
            
    humidity:
      name: "Humidity"
      id: humidity
      filters:
        - offset: 43

switch:
  - platform: ld2410
    engineering_mode:
      name: "engineering mode"
    bluetooth:
      name: "control bluetooth"
  - platform: gpio
  # Fan Control
    pin: 6
    name: FAN

number:
  - platform: ld2410
    timeout:
      name: timeout
    light_threshold:
      name: light threshold
    max_move_distance_gate:
      name: max move distance gate
    max_still_distance_gate:
      name: max still distance gate
    g0:
      move_threshold:
        name: g0 move threshold
      still_threshold:
        name: g0 still threshold
    g1:
      move_threshold:
        name: g1 move threshold
      still_threshold:
        name: g1 still threshold
    g2:
      move_threshold:
        name: g2 move threshold
      still_threshold:
        name: g2 still threshold
    g3:
      move_threshold:
        name: g3 move threshold
      still_threshold:
        name: g3 still threshold
    g4:
      move_threshold:
        name: g4 move threshold
      still_threshold:
        name: g4 still threshold
    g5:
      move_threshold:
        name: g5 move threshold
      still_threshold:
        name: g5 still threshold
    g6:
      move_threshold:
        name: g6 move threshold
      still_threshold:
        name: g6 still threshold
    g7:
      move_threshold:
        name: g7 move threshold
      still_threshold:
        name: g7 still threshold
    g8:
      move_threshold:
        name: g8 move threshold
      still_threshold:
        name: g8 still threshold

button:
  - platform: ld2410
    factory_reset:
      name: "factory reset"
    restart:
      name: "restart"
    query_params:
      name: query params

text_sensor:
  - platform: ld2410
    version:
      name: "firmware version"
  
  - platform: template
    name: "ENS160 Air Quality Rating"
    lambda: |-
      switch ( (int) (id(ens160_air_quality_index).state) ) {
        case 1: return {"Excellent"};
        case 2: return {"Good"};
        case 3: return {"Moderate"};
        case 4: return {"Poor"};
        case 5: return {"Unhealthy"};
        default: return {"Not Available"};
      }
  - platform: template
    name: "Air Quality Recommendation"
    lambda: |-
      std::string action = "";

      if (id(ens160_air_quality_index).has_state()) {
        int aqi = (int) id(ens160_air_quality_index).state;
        if (aqi >= 4) {
          action += "Turn Air purifier ON. ";
        }
      }

      if (id(ens160_voc).has_state() && id(ens160_voc).state > 350) {
        action += "Ventilate room (high VOC). ";
      }

      if (id(ens160_eco2).has_state() && id(ens160_eco2).state > 900) {
        action += "Open window (high COâ‚‚). ";
      }

      if (id(air_pollutants).has_state() && id(air_pollutants).state > 12) {
        action += "Limit activity (PM2.5). ";
      }

      if (id(temperature).has_state() && id(temperature).state > 25) {
        action += "Cool room. ";
      } else if (id(temperature).state < 18) {
        action += "Heat room. ";
      }

      if (id(humidity).has_state() && id(humidity).state > 65) {
        action += "Dehumidify. ";
      } else if (id(humidity).state < 40) {
        action += "Use humidifier. ";
      }

      return action.empty() ? "Air quality is OK." : action;
    icon: "mdi:lightbulb-on-outline"
    update_interval: 60s

select:
  - platform: ld2410
    distance_resolution:
      name: "distance resolution"
    baud_rate:
      name: "baud rate"
    light_function:
      name: light function
    out_pin_level:
      name: out pin level
